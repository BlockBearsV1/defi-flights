import { Chain } from "@thirdweb-dev/chains";
import { ConnectParams, TWConnector } from "../../interfaces/tw-connector";
import { SmartWalletConfig, SmartWalletConnectionArgs } from "./types";
import { EVMWallet } from "../../interfaces";
import { ERC4337EthersSigner } from "./lib/erc4337-signer";
import { providers } from "ethers";
export declare class SmartWalletConnector extends TWConnector<SmartWalletConnectionArgs> {
    private config;
    private aaProvider;
    personalWallet?: EVMWallet;
    constructor(config: SmartWalletConfig);
    initialize(personalWallet: EVMWallet, accountId: string): Promise<void>;
    connect(connectionArgs: ConnectParams<SmartWalletConnectionArgs>): Promise<string>;
    getProvider(): Promise<providers.Provider>;
    getSigner(): Promise<ERC4337EthersSigner>;
    getAddress(): Promise<string>;
    isConnected(): Promise<boolean>;
    disconnect(): Promise<void>;
    switchChain(chainId: number): Promise<void>;
    setupListeners(): Promise<void>;
    updateChains(chains: Chain[]): void;
}
//# sourceMappingURL=index.d.ts.map